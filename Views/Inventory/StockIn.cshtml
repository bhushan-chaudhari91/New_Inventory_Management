@using InventoryManagement.ViewModels;
@model StockInViewModel

<style>
    .autocomplete-list {
        position: absolute;
        z-index: 1000;
        width: 100%;
        max-height: 200px;
        overflow-y: auto;
        background: #fff;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .autocomplete-list li {
        padding: 8px 12px;
        cursor: pointer;
    }

    .autocomplete-list li:hover {
        background: #f0f0f0;
    }

    .autocomplete-list li.highlighted {
        background-color: #007bff;
        color: white;
    }

</style>


<div>
    <div class="row" style="margin-top: -35px; margin-left: -20px;">
        <div class="col-md-12 grid-margin stretch-card">
            <div>
                <div class="card-body">
                   
                    <div class="row" style="margin-bottom: -25px;">
                        <div class="col-md-12 grid-margin">
                            <div class="d-flex justify-content-between flex-wrap">
                                <div class="d-flex align-items-end flex-wrap">
                                    <div class="mr-md-3 mr-xl-5">
                                        <h2>Stock In</h2>

                                    </div>

                                </div>
                                <div class="d-flex justify-content-between align-items-end flex-wrap">

                                   @*  <button class="btn btn-primary mt-2 mt-xl-0" data-bs-toggle="modal" data-bs-target="#excelUploadModal">Upload Excel</button> *@

                                </div>
                            </div>
                            <hr />
                        </div>
                    </div>

                    @* <button class="btn btn-primary mr-3 mt-2 mt-xl-0" data-bs-toggle="modal" data-bs-target="#productFormModal">Add Product</button> *@

                    <form asp-action="StockIn" method="post" class="forms-sample" id="stockForm">
                        <div class="row">
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="date">Date</label>
                                    <input type="date" class="form-control" id="date" value="@DateTime.Today.ToString("yyyy-MM-dd")">
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="batchNo">Batch No</label>
                                    <input asp-for="BatchNo" type="text" class="form-control" value="@Model.BatchNo" id="batchNo" placeholder="Batch No" readonly>
                                </div>
                            </div>

                           @*  <div class="col-md-2">
                                <div class="form-group">
                                    <label for="supplierName">Supplier</label>
                                    <select asp-for="FkSupplierId" class="form-control" id="supplierName" asp-items="Model.SupplierList">
                                        <option value="">Select Supplier</option>
                                    </select>
                                </div>
                            </div> *@

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="supplierName">Supplier</label>
                                    <input type="text" class="form-control" id="supplierName" placeholder="SupplierName" />
                                    <input type="hidden" id="FkSupplierId" name="FkSupplierId" />
                                    <ul id="supplierList" class="autocomplete-list" style="display: none;"></ul>
                                </div>
                            </div>


                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="warehouse">Room / Warehouse</label>
                                    <select asp-for="FkWarehouseId" class="form-control" id="warehouse" asp-items="Model.WarehouseList">
                                       @*  <option value="">Select Warehouse</option> *@
                                    </select>
                                </div>
                            </div>

                            @* <div class="col-md-2">
                                <div class="form-group">
                                    <label for="warehouse">Room</label>
                                    <input type="text" class="form-control" id="warehouse" placeholder="SelectRoom" />
                                    <input type="hidden" id="FkWarehouseId" name="FkWarehouseId" />
                                    <ul id="warehouseList" class="autocomplete-list" style="display: none;"></ul>
                                </div>
                            </div> *@

                            @* <div class="col-md-2">
                                <div class="form-group">
                                    <label for="product">Product</label>
                                    <select asp-for="FkProductId" class="form-control" id="product" asp-items="Model.ProductList">
                                        <option value="">Select Product</option>
                                    </select>
                                   
                                </div>
                            </div> *@

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="product">Product</label>
                                    <input type="text" class="form-control" id="product" placeholder="ProductName" />
                                    <input type="hidden" id="FkProductId" name="FkProductId" />
                                    <ul id="productList" class="autocomplete-list" style="display: none;"></ul>
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group" style="margin-top: 7px;">
                                    <a href="#" class="btn btn-link mt-4" data-bs-toggle="modal" data-bs-target="#productFormModal" style="text-decoration: none;">Add Product</a>
                                </div>
                            </div>
                            
                        </div>

                        <div class="row">

                            <div class="col-md-1">
                                <div class="form-group">
                                    <div class="form-check">
                                        <input asp-for="Type" type="checkbox" class="form-check-input" id="type" value="true" style="margin-left:11%; margin-top: 4px;">
                                        <label class="form-check-label" for="type" style="margin-top: 42px; font-size: 14px; font-weight: 700;">Is Box</label>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="productQuantity">Product Quantity</label>
                                    <input asp-for="ProductQuantity" type="text" class="form-control" id="productQuantity" placeholder="Quantity" value="1">
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="price">Price</label>
                                    <input asp-for="Price" type="text" class="form-control" id="price" placeholder="price">
                                </div>
                            </div>

                            <div class="col-md-2" style="display: none;">
                                <div class="form-group">
                                    <label for="room">Room</label>
                                    <input asp-for="Room" type="text" class="form-control" id="room" placeholder="Room">
                                </div>
                            </div>

                            <div class="col-md-2" style="display: none;">
                                <div class="form-group">
                                    <label for="rackNo">Rack No</label>
                                    <input asp-for="RackNo" type="text" class="form-control" id="rackNo" placeholder="Enter">
                                </div>
                            </div>
                       

                           

                            <div class="col-md-2">
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary mr-2" style="margin-top: 32px;" id="addButton">+ Add</button>
                                </div>
                            </div>
                        </div>

                        <!-- Added Table -->
                        <div class="table-responsive mt-4" style="padding-bottom: 25px;">
                            <table class="table-container" id="stockTable">
                                <thead>
                                    <tr>
                                        <th>Sr.No</th>
                                        <th style="display: none;">Date</th>
                                        <th>Product Name</th>
                                        <th>Barcode</th>
                                        <th>Price</th>
                                        <th>Product Quantity</th>
                                        <th>Batch No</th>
                                        <th style="display: none;">Supplier</th>
                                        <th>Room</th>
                                        <th style="display: none;">Type</th>
                                        <th style="display: none;">Room</th>
                                        <th style="display: none;">Rack No</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>

                        <button type="button" class="btn btn-primary mr-2" id="saveStock">Save</button>
                        <button asp-controller="Inventory" asp-action="InventoryList" class="btn btn-light">Cancel</button>
                    </form>
                </div>
            </div>
        </div>


        <!-- Modal For Choose Excel File -->
        <div class="modal fade" id="excelUploadModal" tabindex="-1" aria-labelledby="excelUploadModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-header">
                        <h5 class="modal-title" id="excelUploadModalLabel">Upload Excel File</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">X</button>
                    </div>

                    <div class="modal-body">
                        <input type="file" id="excelFile" accept=".xls,.xlsx" class="form-control" />
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-success" onclick="saveExcelFile()">Save</button>
                    </div>

                </div>
            </div>
        </div>


    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="productFormModal" tabindex="-1" aria-labelledby="productFormModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productFormModalLabel">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">X</button>
            </div>
            <div class="modal-body">
                <form asp-action="AddProduct" method="post" class="forms-sample">
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label for="ProductName">Product Name</label>
                            <input type="text" class="form-control" name="ProductName" id="ProductName" placeholder="Product Name">
                        </div>

                        <div class="form-group col-md-6">
                            <label for="SkuIdName">SKU Name</label>
                            <input type="text" class="form-control" name="SkuIdName" id="SkuIdName" placeholder="Enter">
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label for="LowStockQuantity">Low Stock Quantity</label>
                            <input type="text" class="form-control" name="LowStockQuantity" id="LowStockQuantity" placeholder="Enter Quantity">
                        </div>

                        <div class="form-group col-md-6">
                            <label for="AliasName">Product Alias 1</label>
                            <input type="text" class="form-control" name="AliasNames[]" placeholder="Enter">
                        </div>

                    </div>



                    <div class="row" id="aliasContainer">


                    </div>

                    <div>
                        <a href="#" id="addAliasBtn" class="btn btn-link">Add Alias</a>
                    </div>


                    <button type="submit" class="btn btn-primary mr-2">Submit</button>
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>

     let serialNumber = 1;

    document.getElementById('addButton').addEventListener('click', function(e) {
        e.preventDefault();

        // Get values
        const date = document.getElementById('date').value;
        // const productId = document.getElementById('product').value;
        // const productText = document.getElementById('product').options[document.getElementById('product').selectedIndex].text;
        const productText = document.getElementById('product').value;
        const productId = document.getElementById('FkProductId').value;
        const price = document.getElementById('price').value;
        const productQuantity = document.getElementById('productQuantity').value;
        const batchNo = document.getElementById('batchNo').value;
        // const supplierId = document.getElementById('supplierName').value;
        // const supplierText = document.getElementById('supplierName').options[document.getElementById('supplierName').selectedIndex].text;
        const supplierText = document.getElementById('supplierName').value;
        const supplierId = document.getElementById('FkSupplierId').value;
        const warehouseId = document.getElementById('warehouse').value;
        const warehouseText = document.getElementById('warehouse').options[document.getElementById('warehouse').selectedIndex].text;
        // const warehouseText = document.getElementById('warehouse').value;
        // const warehouseId = document.getElementById('FkWarehouseId').value;
        const type = document.getElementById('type').checked ? 'Box' : 'Product';
        const room = document.getElementById('room').value;
        const rackNo = document.getElementById('rackNo').value;

        // Validate required fields
        if (!date || !batchNo || !supplierId || !warehouseId || !productId || !productQuantity) {
            alert("Please fill all required fields.");
            return;
        }


        fetch(`/Inventory/GetNextBarcode?productId=${productId}`)
            .then(response => response.json())
            .then(data => {

                const barcodeNo = data.barcode;

                // const existingRows = document.querySelectorAll("#stockTable tbody tr");
                // const productPrefix = productText.substring(0, 2).toUpperCase();
                // let maxNumber = parseInt(data.barcode.replace(productPrefix, '')); 
                // var cts = 0;
                // existingRows.forEach(row => {
                //     const rowProductId = row.dataset.productId;
                //     if (rowProductId === productId) {
                //         cts = cts + 1;
                        
                //     }
                // });

                // console.log("max number = "+maxNumber+"");
                // console.log("cts number = "+cts+"");

                // const nextNumber = maxNumber + cts;
                // const barcodeNo = productPrefix + nextNumber.toString().padStart(6, '0');

                // Now add the row to the table
                const table = document.getElementById('stockTable').getElementsByTagName('tbody')[0];
                const newRow = table.insertRow();

                // Add visible cells
                newRow.insertCell(0).textContent = serialNumber++;
                newRow.insertCell(1).textContent = date;
                newRow.insertCell(2).textContent = productText;
                newRow.insertCell(3).textContent = barcodeNo;
                newRow.insertCell(4).textContent = price;
                newRow.insertCell(5).textContent = productQuantity;
                newRow.insertCell(6).textContent = batchNo;
                newRow.insertCell(7).textContent = supplierText;
                newRow.insertCell(8).textContent = warehouseText;
                newRow.insertCell(9).textContent = type;
                newRow.insertCell(10).textContent = room;
                newRow.insertCell(11).textContent = rackNo;

                // Hide unnecessary columns
                newRow.cells[1].style.display = 'none';
                newRow.cells[7].style.display = 'none';
                newRow.cells[9].style.display = 'none';
                newRow.cells[10].style.display = 'none';
                newRow.cells[11].style.display = 'none';

                // Add remove button
                const removeCell = newRow.insertCell(12);
                const removeButton = document.createElement('button');
                removeButton.textContent = 'Remove';
                removeButton.className = 'btn btn-danger btn-sm';
                removeButton.onclick = function() {
                    table.deleteRow(newRow.rowIndex - 1);
                    updateSerialNumbers();
                };
                removeCell.appendChild(removeButton);

                // Store IDs as data attributes on the row
                newRow.dataset.supplierId = supplierId;
                newRow.dataset.warehouseId = warehouseId;
                newRow.dataset.productId = productId;
                newRow.dataset.type = document.getElementById('type').checked;

                // using this line click on add button so that time clear the checkbox

                //document.getElementById('stockForm').reset();

                document.getElementById('date').value = '@DateTime.Today.ToString("yyyy-MM-dd")';
                document.getElementById('productQuantity').value = '1';
            })
            .catch(error => {
                console.error('Error fetching barcode:', error);
                alert("An error occurred while generating barcode.");
            });
    });

    function updateSerialNumbers() {
        const table = document.getElementById('stockTable');
        const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
        serialNumber = 1;
        for (let i = 0; i < rows.length; i++) {
            rows[i].cells[0].textContent = serialNumber++;
        }
    }

    document.getElementById('type').addEventListener('change', function() {
        var productQuantity = document.getElementById('productQuantity');
        if (!this.checked) {
            productQuantity.value = '1';
        } else {
            productQuantity.value = '';
        }
    });

    document.getElementById('saveStock').addEventListener('click', function () {
        const rows = document.querySelectorAll("#stockTable tbody tr");
        const stockData = [];

        if (rows.length === 0) {
            alert("No items to save.");
            return;
        }

        rows.forEach(row => {
            const cells = row.querySelectorAll("td");
            const stockItem = {
                Date: cells[1].textContent,
                BatchNo: cells[6].textContent,
                FkSupplierId: row.dataset.supplierId,
                FkWarehouseId: row.dataset.warehouseId,
                FkProductId: row.dataset.productId,
                Type: row.dataset.type === 'true' ? '1' : '2',
                ProductQuantity: cells[5].textContent,
                barcodeNo: cells[3].textContent,
                Room: cells[10].textContent,
                Price: cells[4].textContent,
                RackNo: cells[11].textContent,
                Barcode: ""
            };
            stockData.push(stockItem);
        });

        // Send data to server
        fetch("/Inventory/StockIn", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify(stockData)
        })
        .then(response => {
            if (response.ok) {
                // alert("Records saved successfully!");
                // location.reload();
                window.location.href = "/Inventory/InventoryList";
            } else {
                alert("Failed to save records.");
            }
        })
        .catch(error => {
            console.error("Error:", error);
            alert("An error occurred while saving.");
        });
    });
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        function toggleReadonly() {
            if ($('#type').is(':checked')) {
                $('#productQuantity').prop('readonly', false);
            } else {
                $('#productQuantity').prop('readonly', true);
            }
        }

        // Set initial state on page load
        toggleReadonly();

        // Update on checkbox toggle
        $('#type').on('change', function () {
            toggleReadonly();
        });
    });
</script>



@* Start Code for Model Add New Alias TextBox *@
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let aliasCount = 1;
        const aliasContainer = document.getElementById("aliasContainer");
        const addAliasBtn = document.getElementById("addAliasBtn");

        addAliasBtn.addEventListener("click", function (e) {
            e.preventDefault();
            aliasCount++;


            const newAliasDiv = document.createElement("div");
            newAliasDiv.classList.add("col-md-6");

             newAliasDiv.innerHTML = `
                <div class="form-group">
                    <label>Product Alias ${aliasCount}</label>
                    <input type="text" class="form-control" name="AliasNames[]" placeholder="Enter">
                </div>
            `;

            aliasContainer.appendChild(newAliasDiv);
        });
    });
</script>
@* End Code for Model Add New Alias TextBox *@



@* Code for SupplerNames List Auto Search *@
<script>
    $(document).ready(function() {
        var $supplierInput = $('#supplierName');
        var $supplierList = $('#supplierList');
        var $supplierId = $('#FkSupplierId');
        var selectedIndex = -1;

        $supplierInput.on('input', function() {
            var term = $(this).val().trim();
            selectedIndex = -1;

            if (term.length < 1) {
                $supplierList.hide().empty();
                return;
            }

            $.ajax({
                url: '/Inventory/GetSuppliers', 
                type: 'GET',
                dataType: 'json',
                data: { term: term },
                success: function(data) {
                    $supplierList.empty();

                    if (data.length === 0) {
                        $supplierList.hide();
                        return;
                    }

                    $.each(data, function(index, item) {
                        $supplierList.append(
                            $('<li>').text(item.supplierName)
                                     .attr('data-id', item.id)
                                     .on('click', function() {
                                         $supplierInput.val(item.supplierName);
                                         $supplierId.val(item.id);
                                         $supplierList.hide().empty();
                                     })
                        );
                    });

                    $supplierList.show();
                },
                error: function() {
                    $supplierList.hide().empty();
                }
            });
        });


        $supplierInput.on('keydown', function (e) {
            var items = $supplierList.find('li');

            if ($supplierList.is(':visible')) {
                if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    if (selectedIndex < items.length - 1) {
                        selectedIndex++;
                        highlightItem(items, selectedIndex);
                    }
                } else if (e.key === 'ArrowUp') {
                    e.preventDefault();
                    if (selectedIndex > 0) {
                        selectedIndex--;
                        highlightItem(items, selectedIndex);
                    }
                } else if (e.key === 'Enter') {
                    e.preventDefault();
                    if (selectedIndex >= 0 && selectedIndex < items.length) {
                        var selected = $(items[selectedIndex]);
                        $supplierInput.val(selected.text());
                        $supplierId.val(selected.data('id'));
                        $supplierList.hide().empty();
                    }
                }
            }
        });


        $(document).on('click', function(e) {
            if (!$(e.target).closest('#supplierName, #supplierList').length) {
                $supplierList.hide().empty();
            }
        });

        $supplierInput.on('change', function() {
            if ($(this).val().trim() === '') {
                $supplierId.val('');
            }
        });

        function highlightItem(items, index) {
            items.removeClass('highlighted');
            $(items[index]).addClass('highlighted');
        }
    });
</script>





@* <script>
    $(document).ready(function() {
        var $warehouseInput = $('#warehouse');
        var $warehouseList = $('#warehouseList');
        var $warehouseId = $('#FkWarehouseId');

        $warehouseInput.on('input', function() {
            var term = $(this).val().trim();

            if (term.length < 1) {
                $warehouseList.hide().empty();
                return;
            }

            $.ajax({
                url: '/Inventory/GetWarehouse',
                type: 'GET',
                dataType: 'json',
                data: { term: term },
                success: function(data) {
                    $warehouseList.empty();

                    if (data.length === 0) {
                        $warehouseList.hide();
                        return;
                    }

                    $.each(data, function(index, item) {
                        $warehouseList.append(
                            $('<li>').text(item.warehouseName)
                                     .attr('data-id', item.id)
                                     .on('click', function() {
                                         $warehouseInput.val(item.warehouseName);
                                         $warehouseId.val(item.id);
                                         $warehouseList.hide().empty();
                                     })
                        );
                    });

                    $warehouseList.show();
                },
                error: function() {
                    $warehouseList.hide().empty();
                }
            });
        });

        $(document).on('click', function(e) {
            if (!$(e.target).closest('#warehouse, #warehouseList').length) {
                $warehouseList.hide().empty();
            }
        });

        $warehouseInput.on('change', function() {
            if ($(this).val().trim() === '') {
                $warehouseId.val('');
            }
        });
    });
</script> *@


<script>
    $(document).ready(function() {
        var $productInput = $('#product');
        var $productList = $('#productList');
        var $productId = $('#FkProductId');
        var selectedIndex = -1;

        $productInput.on('input', function() {
            var term = $(this).val().trim();
            selectedIndex = -1;

            if (term.length < 1) {
                $productList.hide().empty();
                return;
            }

            $.ajax({
                url: '/Inventory/GetProducts',
                type: 'GET',
                dataType: 'json',
                data: { term: term },
                success: function(data) {
                    $productList.empty();

                    if (data.length === 0) {
                        $productList.hide();
                        return;
                    }

                    $.each(data, function(index, item) {
                        $productList.append(
                            $('<li>').text(item.productName)
                            .attr('data-id', item.id)
                            .on('click', function() {
                                $productInput.val(item.productName);
                                $productId.val(item.id);
                                $productList.hide().empty();
                            })
                        );
                    });

                    $productList.show();
                },
                error: function() {
                    $productList.hide().empty();
                }
            });
        });


        $productInput.on('keydown', function (e) {
            var items = $productList.find('li');

            if ($productList.is(':visible')) {
                if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    if (selectedIndex < items.length - 1) {
                        selectedIndex++;
                        highlightItem(items, selectedIndex);
                    }
                } else if (e.key === 'ArrowUp') {
                    e.preventDefault();
                    if (selectedIndex > 0) {
                        selectedIndex--;
                        highlightItem(items, selectedIndex);
                    }
                } else if (e.key === 'Enter') {
                    e.preventDefault();
                    if (selectedIndex >= 0 && selectedIndex < items.length) {
                        var selected = $(items[selectedIndex]);
                        $productInput.val(selected.text());
                        $productId.val(selected.data('id'));
                        $productList.hide().empty();
                    }
                }
            }
        });


        $(document).on('click', function(e) {
            if (!$(e.target).closest('#product, #productList').length) {
                $productList.hide().empty();
            }
        });

        $productInput.on('change', function() {
            if ($(this).val().trim() === '') {
                $productId.val('');
            }
        });

        function highlightItem(items, index) {
            items.removeClass('highlighted');
            $(items[index]).addClass('highlighted');
        }
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>